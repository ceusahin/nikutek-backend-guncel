package com.example.nikutek.controller;

import com.example.nikutek.dto.ProductDTO;
import com.example.nikutek.entity.*;
import com.example.nikutek.service.ProductService;
import lombok.Data;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;

@RestController
@RequestMapping("/products")
@RequiredArgsConstructor
public class ProductController {

    private final ProductService productService;

    // ðŸ”¸ TÃ¼m Ã¼rÃ¼nleri (ana + altlarÄ±yla birlikte) Ã§ek
    @GetMapping
    public ResponseEntity<List<ProductDTO>> getAllProducts() {
        return ResponseEntity.ok(productService.getAllProducts());
    }

    // ðŸ”¸ Belirli Ã¼rÃ¼nÃ¼n detayÄ±nÄ± (alt verilerle birlikte) Ã§ek
    @GetMapping("/{id}")
    public ResponseEntity<ProductDTO> getProductById(@PathVariable Long id) {
        return ResponseEntity.ok(productService.getProductById(id));
    }

    // ðŸ”¸ ÃœrÃ¼n kaydet veya gÃ¼ncelle (tek istekle)
    @PostMapping("/save")
    public ResponseEntity<ProductDTO> saveOrUpdateProduct(@RequestBody ProductDTO productDTO) {
        return ResponseEntity.ok(productService.saveOrUpdateFullProduct(productDTO));
    }

    // ðŸ”¸ ÃœrÃ¼n sil (child ve baÄŸlÄ± veriler dahil)
    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteProduct(@PathVariable Long id) {
        productService.deleteProduct(id);
        return ResponseEntity.noContent().build();
    }

    // ðŸ”¸ Aktif/Pasif deÄŸiÅŸtir
    @PostMapping("/{id}/toggle")
    public ResponseEntity<ProductDTO> toggleActive(@PathVariable Long id) {
        return ResponseEntity.ok(productService.toggleActiveDTO(id));
    }

    // ðŸ”¸ Cloudinary dosya yÃ¼kleme
    @PostMapping("/upload")
    public ResponseEntity<String> uploadFile(@RequestParam("file") MultipartFile file) {
        return ResponseEntity.ok(productService.uploadFile(file));
    }
}

